.. _graph_rg:

==========================
Unsolicited accmd messages
==========================

.. image:: _static/ringtone.svg 

The ``ringtone generator`` operator emits an unsolicited ``accmd`` message 
with the ``message_id`` of ``0x0001`` at the end of playing the ringtone. 
This example shows how to receive and print that accmd message on KSE shell:

This example uses the config file ``ringtone.cfg.json`` which is located in the 
``config`` directory in your project workspace.
The config file holds the following content::

    {
        "stream": [
            {
                "interface": "pcm",
                "type": "sink",
                "kwargs": {
                    "backing": "file",
                    "filename": "tmp/ringtone_0.wav",
                    "sample_rate": 8000,
                    "sample_width": 16
                }
            }
        ],
        "endpoint": [
            {
                "interface": "pcm",
                "type": "sink",
                "kwargs": {
                    "instance": 0,
                    "channel": 0,
                    "pcm_sync_rate": 8000,
                    "pcm_sample_rising_edge": 0,
                    "pcm_master_mode": 1,
                    "pcm_slot_count": 4,
                    "pcm_sample_format": 1,
                    "pcm_master_clock_rate": 512000
                }
            }
        ],
        "operator": [
            {
                "interface": "RINGTONE_GENERATOR",
                "args": [
                    [
                        "SET_SAMPLE_RATE",
                        [
                            320
                        ]
                    ],
                    [
                        "OPMSG_RINGTONE_ID_TONE_SEQ",
                        [
                            37264,
                            41215,
                            45056,
                            1540,
                            16272,
                            32768
                        ]
                    ]
                ]
            }
        ],
        "graph": [
            [
                "operator0o0",
                "endpoint0"
            ],
            [
                "endpoint0",
                "stream0"
            ]
        ]
    }

In KSE shell, run::

    >>> import threading
    >>> UNSOLICITED_CMD_ID = 0x10
    >>> end_block = threading.Event()
    >>> def accmd_printer(data):
    >>>     from kse.framework.library.log import dump
    >>>     cmd_id, _, payload = kymera._accmd.receive(data)
    >>>     if cmd_id == UNSOLICITED_CMD_ID and payload[1:] == [0, 1, 0]:
    >>>         print(dump(data))
    >>>         end_block.set()
    >>> handler = kymera._accmd.register_receive_callback(accmd_printer)
    >>> def timer_expired(_id):
    >>>     end_block.set()
    >>> uut.timer_add_relative(8, timer_expired)
    >>> from kse.framework.library.file_util import load
    >>> data = load('config/ringtone.cfg.json')
    >>> graph.load(data)
    >>> graph.create()
    >>> graph.config()
    >>> graph.connect()
    >>> graph.start()
    >>> end_block.wait()
    >>> graph.stop()
    >>> graph.disconnect()
    >>> graph.destroy()
    >>> kymera._accmd.unregister_receive_callback(handler)
    
* This should print ``10 08 XX XXXX 00 01 00`` on the KSE shell.

.. note:: ``XX`` and ``XXXX`` is varying hexadecimal numbers representing 
          message sequence number and the operator ID respectively.
